//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MapPortingUtility {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MapPortingUtility.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;version&quot;: 1,
        ///    &quot;name&quot;: &quot;$levelbriefing&quot;,
        ///    &quot;gameFlags&quot;: &quot;00000000&quot;,
        ///    &quot;stateFlags&quot;: &quot;00000011&quot;,
        ///    &quot;sortKey&quot;: 34,
        ///    &quot;techniqueSet&quot;: &quot;2d&quot;,
        ///    &quot;textureAtlasRowCount&quot;: 1,
        ///    &quot;textureAtlasColumnCount&quot;: 1,
        ///    &quot;surfaceTypeBits&quot;: &quot;00000000000000000000000000000000&quot;,
        ///    &quot;textureTable&quot;: [
        ///        {
        ///            &quot;samplerState&quot;: 2,
        ///            &quot;semantic&quot;: 0,
        ///            &quot;image&quot;: &quot;loadscreen_MAPNAME&quot;,
        ///            &quot;nameEnd&quot;: 112,
        ///            &quot;nameHash&quot;: 2695565377,
        ///            &quot;nameStart&quot;: 99
        ///        } [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string loadMaterialTemplate {
            get {
                return ResourceManager.GetString("loadMaterialTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include common_scripts\utility;
        ///
        ///main()
        ///{
        ///	maps\mp\MAPNAME_fx::main();
        ///	maps\createfx\MAPNAME_fx::main();
        ///	maps\createart\MAPNAME_art::main();
        ///	maps\mp\_load::main();
        ///
        ///	game[ &quot;attackers&quot; ] = &quot;allies&quot;;
        ///	game[ &quot;defenders&quot; ] = &quot;axis&quot;;
        ///
        ///	ambientPlay ( &quot;AMBIENT&quot; );
        ///
        ///	setdvar( &quot;compassmaxrange&quot;, &quot;2100&quot; );
        ///	maps\mp\_compass::setupMiniMap( &quot;compass_map_MAPNAME&quot; );
        ///}.
        /// </summary>
        internal static string mainGscTemplate {
            get {
                return ResourceManager.GetString("mainGscTemplate", resourceCulture);
            }
        }
    }
}
